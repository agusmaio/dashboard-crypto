{"version":3,"sources":["constants/routes.js","constants/endpoints.js","store/actionTypes.js","store/api.js","constants/apiKey.js","components/Welcome/Welcome.js","components/Welcome/index.js","store/actionCreators.js","components/Header/Header.js","components/Header/index.js","components/Coin/Coin.js","components/Coins/Coins.js","constants/commissions.js","components/Common/ErrorMessage.js","components/BuyModal/BuyModal.js","assets/loading.svg","components/Common/Loading.js","components/Home/Home.js","components/Home/index.js","components/Routing/Routing.js","constants/apiCallStates.js","store/reducer.js","store/index.js","App.js","index.js"],"names":["routes","base","endpoints","assets","assetsIcons","exchangeRate","coin","exchanges","exchangesIcons","SET_ENTRY","FETCH_COINS_SUCCESS","FETCH_COINS_LOADING","FETCH_COINS_ERROR","FETCH_EXCHANGES_SUCCESS","FETCH_EXCHANGES_LOADING","FETCH_EXCHANGES_ERROR","api","obj","a","axios","headers","Welcome","navigateToDashboard","history","useHistory","nameRef","useRef","lastNameRef","className","onSubmit","e","preventDefault","name","current","value","lastName","ref","type","mapDispatchToProps","dispatch","actionTypes","payload","complete","push","connect","state","Header","entry","Coin","setSelectedCoin","icon","src","alt","asset_id","onClick","Coins","coins","map","ErrorMessage","text","Exchange","selectHandler","exchange","selectedExchange","exchange_id","commissions","index","BuyModal","handleClose","useState","setSelectedExchange","setValue","purchaseDone","setPurchaseDone","purchaseError","setPurchaseError","cryptoAmount","id","find","findExchangeIndex","rate","selectExchangeHandler","data","toFixed","disabled","onChange","target","isNaN","Loading","LoadingIcon","Home","fetchCoins","fetchExchanges","coinsRequest","exchangesRequest","selectedCoin","useEffect","to","content","error","loading","storageCoins","localStorage","getItem","JSON","parse","method","url","response","responseIcons","filteredCoins","filter","criptoStart","Date","data_start","getFullYear","isValid","type_is_crypto","sort","b","volume_1mth_usd","slice","i","length","assetId","exchangeResponse","setItem","stringify","storageExchanges","filteredExchanges","Routing","exact","path","apiCallStates","success","initialState","store","createStore","action","applyMiddleware","thunk","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6286b089.chunk.js","sourcesContent":["export const routes = {\n  base: \"/\",\n  welcome: \"/welcome\",\n  home: \"/home\",\n};\n","const base = 'https://rest.coinapi.io';\n\nexport const endpoints = {\n  assets: `${base}/v1/assets`,\n  assetsIcons: `${base}/v1/assets/icons/40`,\n  exchangeRate: (coin) => `${base}/v1/exchangerate/${coin}/USD`,\n  exchanges: `${base}/v1/exchanges`,\n  exchangesIcons: `${base}/v1/exchanges/icons/40`,\n};\n","export const SET_ENTRY = 'SET_ENTRY';\nexport const FETCH_COINS_SUCCESS = 'FETCH_COINS_SUCCESS';\nexport const FETCH_COINS_LOADING = 'FETCH_COINS_LOADING';\nexport const FETCH_COINS_ERROR = 'FETCH_COINS_ERROR';\nexport const FETCH_EXCHANGES_SUCCESS = 'FETCH_EXCHANGES_SUCCESS';\nexport const FETCH_EXCHANGES_LOADING = 'FETCH_EXCHANGES_LOADING';\nexport const FETCH_EXCHANGES_ERROR = 'FETCH_EXCHANGES_ERROR';\n","import axios from 'axios';\r\nimport apiKey from 'constants/apiKey';\r\n\r\nexport const api = async (obj) => {\r\n  return await axios({\r\n    ...obj,\r\n    headers: {\r\n      'X-CoinAPI-Key': apiKey,\r\n    },\r\n  });\r\n};\r\n","export default \"ACD418F0-5F3A-4190-B9F4-89154D87B179\";\n","import React, { useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useHistory } from \"react-router\";\n\nconst Welcome = ({ navigateToDashboard }) => {\n  const history = useHistory();\n\n  const nameRef = useRef();\n  const lastNameRef = useRef();\n\n  const handleForm = (e) => {\n    e.preventDefault();\n\n    const name = nameRef.current.value;\n    const lastName = lastNameRef.current.value;\n\n    navigateToDashboard(name, lastName, history);\n  };\n\n  return (\n    <div className=\"welcome-container\">\n      <form onSubmit={handleForm}>\n        <h1>Bienvenido a Crypto</h1>\n\n        <label>Nombre</label>\n        <input ref={nameRef} type=\"text\"></input>\n\n        <label>Apellido</label>\n        <input ref={lastNameRef} type=\"text\"></input>\n\n        <button>Ingresar</button>\n      </form>\n    </div>\n  );\n};\n\nWelcome.propTypes = {};\n\nexport default Welcome;\n","import { connect } from \"react-redux\";\nimport { navigateToDashboard } from \"store/actionCreators\";\nimport Welcome from \"./Welcome\";\n\nconst mapStateToProps = (state) => ({});\n\nconst mapDispatchToProps = {\n  navigateToDashboard,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Welcome);\n","import { endpoints } from \"constants/endpoints\";\nimport { routes } from \"constants/routes\";\nimport * as actionTypes from \"./actionTypes\";\nimport axios from \"axios\";\nimport { api } from \"./api\";\n\nexport const navigateToDashboard =\n  (name, lastName, history) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.SET_ENTRY,\n      payload: {\n        name,\n        lastName,\n        complete: true,\n      },\n    });\n    history.push(routes.home);\n  };\n\nexport const fetchCoins = () => async (dispatch) => {\n  dispatch({\n    type: actionTypes.FETCH_COINS_LOADING,\n  });\n\n  try {\n    // TEMPORARILY TO AVOID REACHING API LIMIT\n    const storageCoins = localStorage.getItem(\"coins\");\n\n    if (storageCoins) {\n      dispatch({\n        type: actionTypes.FETCH_COINS_SUCCESS,\n        payload: JSON.parse(storageCoins),\n      });\n\n      return;\n    }\n\n    const response = await api({\n      method: \"get\",\n      url: endpoints.assets,\n    });\n\n    const responseIcons = await api({\n      method: \"get\",\n      url: endpoints.assetsIcons,\n    });\n\n    const filteredCoins = response.data\n      .filter((coin) => {\n        //filter out coins younger than 5 years so we don't have random coins with random numbers\n        const criptoStart = new Date(coin.data_start)?.getFullYear();\n        const isValid = new Date().getFullYear() - criptoStart > 5;\n\n        return coin.type_is_crypto && isValid;\n      })\n      .sort((a, b) => b.volume_1mth_usd - a.volume_1mth_usd)\n      .slice(0, 5)\n      .map((coin) => ({\n        ...coin,\n        icon: responseIcons.data.find((icon) => icon.asset_id === coin.asset_id)\n          ?.url,\n      }));\n\n    for (let i = 0; i < filteredCoins.length; i++) {\n      const assetId = filteredCoins[i].asset_id;\n\n      const exchangeResponse = await api({\n        method: \"get\",\n        url: endpoints.exchangeRate(assetId),\n      });\n\n      filteredCoins[i].exchangeRate = exchangeResponse.data;\n    }\n\n    dispatch({\n      type: actionTypes.FETCH_COINS_SUCCESS,\n      payload: filteredCoins,\n    });\n\n    localStorage.setItem(\"coins\", JSON.stringify(filteredCoins));\n  } catch (err) {\n    dispatch({\n      type: actionTypes.FETCH_COINS_ERROR,\n    });\n  }\n};\n\nexport const fetchExchanges = () => async (dispatch) => {\n  dispatch({\n    type: actionTypes.FETCH_EXCHANGES_LOADING,\n  });\n\n  try {\n    const storageExchanges = localStorage.getItem(\"exchanges\");\n\n    if (storageExchanges) {\n      dispatch({\n        type: actionTypes.FETCH_EXCHANGES_SUCCESS,\n        payload: JSON.parse(storageExchanges),\n      });\n\n      return;\n    }\n\n    const response = await api({\n      method: \"get\",\n      url: endpoints.exchanges,\n    });\n\n    const responseIcons = await api({\n      method: \"get\",\n      url: endpoints.exchangesIcons,\n    });\n\n    const filteredExchanges = response.data\n      .sort((a, b) => b.volume_1mth_usd - a.volume_1mth_usd)\n      .slice(0, 3)\n      .map((exchange, index) => ({\n        ...exchange,\n        icon: responseIcons.data.find(\n          (icon) => icon.exchange_id === exchange.exchange_id\n        )?.url,\n        index,\n      }));\n\n    dispatch({\n      type: actionTypes.FETCH_EXCHANGES_SUCCESS,\n      payload: filteredExchanges,\n    });\n\n    localStorage.setItem(\"exchanges\", JSON.stringify(filteredExchanges));\n  } catch (err) {\n    dispatch({\n      type: actionTypes.FETCH_COINS_ERROR,\n    });\n  }\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Header = ({ entry }) => {\n  return (\n    <header>\n      <p>\n        Bienvenido, {entry.name} {entry.lastName}\n      </p>\n    </header>\n  );\n};\n\nHeader.propTypes = {};\n\nexport default Header;\n","import Header from \"./Header\";\nimport { connect } from \"react-redux\";\n\nconst mapStateToProps = (state) => ({\n  entry: state.entry,\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","import React from 'react';\r\n\r\nconst Coin = ({ coin, setSelectedCoin }) => {\r\n  return (\r\n    <div className='coin-global'>\r\n      <div className='coin-data'>\r\n        {coin.icon ? (\r\n          <img src={coin.icon} alt={coin.asset_id} />\r\n        ) : (\r\n          <div className='coin-image-empty'>💲</div>\r\n        )}\r\n\r\n        <p>{coin.asset_id}</p>\r\n      </div>\r\n\r\n      <button onClick={() => setSelectedCoin(coin)}>Comprar</button>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\nexport default Coin;\r\n","import React from 'react';\nimport Coin from 'components/Coin/Coin';\n\nconst Coins = ({ coins, setSelectedCoin }) => {\n  return (\n    <div className='coins-container'>\n      {coins.map((coin) => (\n        <Coin setSelectedCoin={setSelectedCoin} coin={coin} />\n      ))}\n    </div>\n  );\n};\n\nexport default Coins;\n","export default [0.55, 0.4, 0.25];\r\n","import React from 'react';\r\n\r\nconst ErrorMessage = ({ text }) => {\r\n  return <p className='error-message'>❌ {text}</p>;\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import React, { useState } from 'react';\r\nimport commissions from 'constants/commissions';\r\nimport ErrorMessage from 'components/Common/ErrorMessage';\r\n\r\nconst Exchange = ({ selectHandler, exchange, selectedExchange }) => {\r\n  return (\r\n    <button\r\n      onClick={() => selectHandler(exchange.exchange_id)}\r\n      className={selectedExchange === exchange.exchange_id ? 'selected' : ''}\r\n    >\r\n      <img src={exchange.icon} alt={exchange.exchange_id} />\r\n      <p>{exchange.exchange_id}</p>\r\n      <span>Comisión: {commissions[exchange.index]}%</span>\r\n    </button>\r\n  );\r\n};\r\n\r\nconst BuyModal = ({ coin, handleClose, exchanges }) => {\r\n  const [selectedExchange, setSelectedExchange] = useState(null);\r\n  const [value, setValue] = useState(0);\r\n  const [purchaseDone, setPurchaseDone] = useState(false);\r\n  const [purchaseError, setPurchaseError] = useState(false);\r\n\r\n  const findExchangeIndex = (id) => {\r\n    return exchanges.find((exchange) => exchange.exchange_id === id)?.index;\r\n  };\r\n\r\n  const amountWithComission =\r\n    value - value * (commissions[findExchangeIndex(selectedExchange)] / 100);\r\n  const cryptoAmount = amountWithComission / coin.exchangeRate.rate;\r\n\r\n  const completePurchaseHandler = () => {\r\n    if (isNaN(cryptoAmount)) {\r\n      setPurchaseError('Debe seleccionar un exchange');\r\n      return;\r\n    }\r\n\r\n    if (cryptoAmount <= 0) {\r\n      setPurchaseError('El valor de compra debe ser mayor a 0');\r\n      return;\r\n    }\r\n\r\n    setPurchaseDone(true);\r\n  };\r\n\r\n  const selectExchangeHandler = (data) => {\r\n    setSelectedExchange(data);\r\n    setPurchaseError('');\r\n  };\r\n\r\n  return (\r\n    <div className='buy-modal'>\r\n      <div className='buy-modal-container'>\r\n        <button onClick={handleClose} className='buy-modal-close'>\r\n          ✖\r\n        </button>\r\n\r\n        <h2>{coin.asset_id}</h2>\r\n\r\n        {!purchaseDone ? (\r\n          <>\r\n            <div className='exchanges'>\r\n              <p>Seleccioná un exchange para comprar:</p>\r\n              <div className='exchanges-container'>\r\n                {exchanges.map((exchange) => (\r\n                  <Exchange\r\n                    key={exchange.exchange_id}\r\n                    selectHandler={selectExchangeHandler}\r\n                    selectedExchange={selectedExchange}\r\n                    exchange={exchange}\r\n                  />\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            <ul className='buy-modal-detail'>\r\n              <li>\r\n                <b>💵 USD Rate:</b> {coin.exchangeRate.rate.toFixed(2)} U$D\r\n              </li>\r\n\r\n              <li>\r\n                <b>\r\n                  💰 Cantidad en USD:{' '}\r\n                  <span className='buy-modal-dollar-sign'>$</span>\r\n                  <input\r\n                    disabled={!selectedExchange}\r\n                    type='number'\r\n                    value={value}\r\n                    onChange={(e) => setValue(e.target.value)}\r\n                    className='buy-modal-input'\r\n                  />\r\n                </b>\r\n              </li>\r\n\r\n              <li>\r\n                <b>📀 Crypto a comprar:</b>\r\n                <span className='buy-modal-total'>\r\n                  {!isNaN(cryptoAmount) ? cryptoAmount.toFixed(6) : '-'}\r\n                </span>\r\n              </li>\r\n            </ul>\r\n\r\n            {purchaseError && (\r\n              <div className='purchase-error'>\r\n                <ErrorMessage text={purchaseError} />\r\n              </div>\r\n            )}\r\n\r\n            <button\r\n              className='purchase-button'\r\n              onClick={completePurchaseHandler}\r\n            >\r\n              Finalizar compra\r\n            </button>\r\n          </>\r\n        ) : (\r\n          <div className='purchase-complete'>\r\n            <p>\r\n              ✅ ¡Felicidades, ha comprado {cryptoAmount.toFixed(6)}{' '}\r\n              {coin.asset_id}!\r\n            </p>\r\n            <button onClick={handleClose} className='purchase-button'>\r\n              Seguir comprando\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuyModal;\r\n","export default __webpack_public_path__ + \"static/media/loading.f44d20d2.svg\";","import React from 'react';\r\nimport LoadingIcon from 'assets/loading.svg';\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className='loading-element'>\r\n      <img src={LoadingIcon} alt='Cargando...' />\r\n      <p>Cargando...</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import React, { useState, useEffect } from 'react';\nimport Header from 'components/Header';\nimport { Redirect } from 'react-router';\nimport { routes } from 'constants/routes';\nimport Coins from 'components/Coins/Coins';\nimport BuyModal from 'components/BuyModal/BuyModal';\nimport ErrorMessage from 'components/Common/ErrorMessage';\nimport Loading from 'components/Common/Loading';\n\nconst Home = ({\n  entry,\n  fetchCoins,\n  fetchExchanges,\n  coins,\n  coinsRequest,\n  exchanges,\n  exchangesRequest,\n}) => {\n  const [selectedCoin, setSelectedCoin] = useState(null);\n\n  useEffect(() => {\n    fetchCoins();\n    fetchExchanges();\n  }, [fetchCoins, fetchExchanges]);\n\n  if (!entry.complete) return <Redirect to={routes.welcome} />;\n\n  let content = null;\n\n  if (coinsRequest.error || exchangesRequest.error) {\n    content = (\n      <ErrorMessage text='Lo sentimos, se ha producido un error, recargue la página.' />\n    );\n  } else if (coinsRequest.loading || exchangesRequest.loading) {\n    content = <Loading />;\n  } else {\n    content = (\n      <>\n        <Coins coins={coins} setSelectedCoin={setSelectedCoin} />\n\n        {selectedCoin && (\n          <BuyModal\n            exchanges={exchanges}\n            handleClose={() => setSelectedCoin(null)}\n            coin={selectedCoin}\n          />\n        )}\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Header />\n\n      <main>{content}</main>\n    </>\n  );\n};\n\nexport default Home;\n","import Home from './Home';\nimport { connect } from 'react-redux';\nimport { fetchCoins, fetchExchanges } from 'store/actionCreators';\n\nconst mapStateToProps = (state) => ({\n  entry: state.entry,\n  coins: state.coins,\n  coinsRequest: state.coinsRequest,\n  exchanges: state.exchanges,\n  exchangesRequest: state.exchangesRequest,\n});\n\nconst mapDispatchToProps = {\n  fetchCoins,\n  fetchExchanges,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import { Switch, Route, Redirect } from \"react-router\";\nimport { routes } from \"constants/routes\";\nimport Welcome from \"components/Welcome\";\nimport Home from \"components/Home\";\n\nconst Routing = () => {\n  return (\n    <Switch>\n      <Route exact path={routes.base}>\n        <Redirect to={routes.welcome} />\n      </Route>\n\n      <Route exact path={routes.welcome}>\n        <Welcome />\n      </Route>\n\n      <Route exact path={routes.home}>\n        <Home />\n      </Route>\n    </Switch>\n  );\n};\n\nexport default Routing;\n","export const apiCallStates = {\n  loading: false,\n  success: false,\n  error: false,\n};\n","import { apiCallStates } from 'constants/apiCallStates';\nimport * as actionTypes from './actionTypes';\n\n/* estado inicial de la app */\nconst initialState = {\n  entry: {\n    name: '',\n    lastName: '',\n    complete: false,\n  },\n  coins: [],\n  coinsRequest: { ...apiCallStates },\n  exchanges: [],\n  exchangesRequest: { ...apiCallStates },\n};\n\nexport const reducer = (state = initialState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case actionTypes.FETCH_EXCHANGES_LOADING: {\n      return {\n        ...state,\n        exchangesRequest: {\n          loading: true,\n          error: false,\n          success: false,\n        },\n      };\n    }\n    case actionTypes.FETCH_EXCHANGES_SUCCESS: {\n      return {\n        ...state,\n        exchangesRequest: {\n          ...state.exchangesRequest,\n          loading: false,\n          success: true,\n        },\n        exchanges: payload,\n      };\n    }\n    case actionTypes.FETCH_EXCHANGES_ERROR: {\n      return {\n        ...state,\n        exchangesRequest: {\n          ...state.exchangesRequest,\n          loading: false,\n          error: true,\n        },\n      };\n    }\n    case actionTypes.FETCH_COINS_LOADING: {\n      return {\n        ...state,\n        coinsRequest: {\n          loading: true,\n          error: false,\n          success: false,\n        },\n      };\n    }\n    case actionTypes.FETCH_COINS_SUCCESS: {\n      return {\n        ...state,\n        coinsRequest: {\n          ...state.coinsRequest,\n          loading: false,\n          success: true,\n        },\n        coins: payload,\n      };\n    }\n    case actionTypes.FETCH_COINS_ERROR: {\n      return {\n        ...state,\n        coinsRequest: {\n          ...state.coinsRequest,\n          loading: false,\n          error: true,\n        },\n      };\n    }\n    case actionTypes.SET_ENTRY: {\n      return {\n        ...state,\n        entry: {\n          name: payload.name,\n          lastName: payload.lastName,\n          complete: payload.complete,\n        },\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { reducer } from \"store/reducer\";\n\nconst store = createStore(reducer, applyMiddleware(thunk));\n\nexport default store;\n","import \"App.scss\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Routing from \"components/Routing/Routing\";\nimport { Provider } from \"react-redux\";\nimport store from \"store\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <Routing />\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}